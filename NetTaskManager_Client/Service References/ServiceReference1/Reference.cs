//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NetTaskManager_Client.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ITskMng")]
    public interface ITskMng {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITskMng/GetProcesses", ReplyAction="http://tempuri.org/ITskMng/GetProcessesResponse")]
        string[] GetProcesses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITskMng/GetProcesses", ReplyAction="http://tempuri.org/ITskMng/GetProcessesResponse")]
        System.Threading.Tasks.Task<string[]> GetProcessesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITskMng/KillTask", ReplyAction="http://tempuri.org/ITskMng/KillTaskResponse")]
        int KillTask(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITskMng/KillTask", ReplyAction="http://tempuri.org/ITskMng/KillTaskResponse")]
        System.Threading.Tasks.Task<int> KillTaskAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITskMng/RunTask", ReplyAction="http://tempuri.org/ITskMng/RunTaskResponse")]
        int RunTask(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITskMng/RunTask", ReplyAction="http://tempuri.org/ITskMng/RunTaskResponse")]
        System.Threading.Tasks.Task<int> RunTaskAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITskMng/Hello", ReplyAction="http://tempuri.org/ITskMng/HelloResponse")]
        string Hello();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITskMng/Hello", ReplyAction="http://tempuri.org/ITskMng/HelloResponse")]
        System.Threading.Tasks.Task<string> HelloAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITskMngChannel : NetTaskManager_Client.ServiceReference1.ITskMng, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TskMngClient : System.ServiceModel.ClientBase<NetTaskManager_Client.ServiceReference1.ITskMng>, NetTaskManager_Client.ServiceReference1.ITskMng {
        
        public TskMngClient() {
        }
        
        public TskMngClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TskMngClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TskMngClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TskMngClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetProcesses() {
            return base.Channel.GetProcesses();
        }
        
        public System.Threading.Tasks.Task<string[]> GetProcessesAsync() {
            return base.Channel.GetProcessesAsync();
        }
        
        public int KillTask(string name) {
            return base.Channel.KillTask(name);
        }
        
        public System.Threading.Tasks.Task<int> KillTaskAsync(string name) {
            return base.Channel.KillTaskAsync(name);
        }
        
        public int RunTask(string name) {
            return base.Channel.RunTask(name);
        }
        
        public System.Threading.Tasks.Task<int> RunTaskAsync(string name) {
            return base.Channel.RunTaskAsync(name);
        }
        
        public string Hello() {
            return base.Channel.Hello();
        }
        
        public System.Threading.Tasks.Task<string> HelloAsync() {
            return base.Channel.HelloAsync();
        }
    }
}
